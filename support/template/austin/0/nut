/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM Extend Project: Open source CFD        |
|  \\    /   O peration     | Version:  1.6-ext                               |
|   \\  /    A nd           | Web:      www.extend-project.de                 |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0";
    object      nut;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 2 -1 0 0 0 0];

internalField   uniform	0;

boundaryField
{
    top
    {
        type            fixedValue;
        value           uniform	0;
    }
    bottom
    {
        type            nutSpalartAllmarasStandardRoughWallFunction;
        Cmu             0.09;
        kappa           0.41;
        E               9.8;
        roughnessHeight 0;
        roughnessConstant 0.5;
        roughnessFudgeFactor 1;
        value           uniform	0;
    }
    frontAndBack
    {
        type            empty;
    }
    cylinder1	//cyl1_begin
    {
        type            nutSpalartAllmarasStandardRoughWallFunction;
        Cmu             0.09;
        kappa           0.41;
        E               9.8;
        roughnessHeight 0;
        roughnessConstant 0.5;
        roughnessFudgeFactor 1;
        value           uniform	0;
    }	//cyl1_end
    cylinder2	//cyl2_begin
    {
        type            nutSpalartAllmarasStandardRoughWallFunction;
        Cmu             0.09;
        kappa           0.41;
        E               9.8;
        roughnessHeight 0;
        roughnessConstant 0.5;
        roughnessFudgeFactor 1;
        value           uniform	0;
    }	//cyl2_end
    cylinder3	//cyl3_begin
    {
        type            nutSpalartAllmarasStandardRoughWallFunction;
        Cmu             0.09;
        kappa           0.41;
        E               9.8;
        roughnessHeight 0;
        roughnessConstant 0.5;
        roughnessFudgeFactor 1;
        value           uniform	0;
    }	//cyl3_end
    cylinder4	//cyl4_begin
    {
        type            nutSpalartAllmarasStandardRoughWallFunction;
        Cmu             0.09;
        kappa           0.41;
        E               9.8;
        roughnessHeight 0;
        roughnessConstant 0.5;
        roughnessFudgeFactor 1;
        value           uniform	0;
    }	//cyl4_end
    ggi1in	//cyl1_begin
    {
        type            ggi;
        value           uniform 0;
    }	//cyl1_end
    ggi1out	//cyl1_begin
    {
        type            ggi;
        value           uniform	0;
    }	//cyl1_end
    ggi2in	//cyl1_begin
    {
        type            ggi;
        value           uniform 0;
    }	//cyl1_end
    ggi2out	//cyl1_begin
    {
        type            ggi;
        value           uniform 1.1389e-06;
    }	//cyl1_end
    ggi3in	//cyl2_begin
    {
        type            ggi;
        value           uniform 0;
    }	//cyl2_end
    ggi3out	//cyl2_begin
    {
        type            ggi;
        value           uniform 1.1389e-06;
    }	//cyl2_end
    ggi4in	//cyl2_begin
    {
        type            ggi;
        value           uniform 0;
    }	//cyl2_end
    ggi4out	//cyl2_begin
    {
        type            ggi;
        value           uniform 1.1389e-06;
    }	//cyl2_end
    ggi5in	//cyl3_begin
    {
        type            ggi;
        value           uniform 0;
    }	//cyl3_end
    ggi5out	//cyl3_begin
    {
        type            ggi;
        value           uniform 1.1389e-06;
    }	//cyl3_end
    ggi6in	//cyl3_begin
    {
        type            ggi;
        value           uniform 0;
    }	//cyl3_end
    ggi6out	//cyl3_begin
    {
        type            ggi;
        value           uniform 1.1389e-06;
    }	//cyl3_end
    ggi7in	//cyl4_begin
    {
        type            ggi;
        value           uniform 0;
    }	//cyl4_end
    ggi7out	//cyl4_begin
    {
        type            ggi;
        value           uniform 0;
    }	//cyl4_end
    ggi8in	//cyl4_begin
    {
        type            ggi;
        value           uniform 0;
    }	//cyl4_end
    ggi8out	//cyl4_begin
    {
        type            ggi;
        value           uniform 0;
    }	//cyl4_end
    inlet
    {
        type            fixedValue;
        value           uniform 0;
    }
    outlet
    {
        type            zeroGradient;
    }
}


// ************************************************************************* //
